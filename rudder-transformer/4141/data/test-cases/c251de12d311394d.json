{"uid":"c251de12d311394d","name":"Identify and Subscribe user where the user doesnot exists[mock] (without suppression status code feature from server)","fullName":"test/integrations/component.test.ts#/home/runner/work/rudder-transformer/rudder-transformer/test/integrations/destinations/klaviyo/processor/data.ts Tests klaviyo destination processor -> Identify and Subscribe user where the user doesnot exists[mock] (without suppression status code feature from server) (index: 13)","historyId":"e0bcdc80cc3cf40fa787d64847fd462a:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1741682374038,"stop":1741682374046,"duration":8},"description":"\n      Feature: processor\n      Description: Identify and Subscribe user where the user doesnot exists[mock] (without suppression status code feature from server)\n      Success Criteria: Response should containt two payloads one for profile updation and other for subscription, response status code should be 200\n      Scenario: Business + Framework\n      Test ID: klaviyo-identify-test-1\n      API Version: v0\n    ","descriptionHtml":"<pre><code>  Feature: processor\n  Description: Identify and Subscribe user where the user doesnot exists[mock] (without suppression status code feature from server)\n  Success Criteria: Response should containt two payloads one for profile updation and other for subscription, response status code should be 200\n  Scenario: Business + Framework\n  Test ID: klaviyo-identify-test-1\n  API Version: v0\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeAll","time":{"start":1741682356315,"stop":1741682356318,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"beforeEach","time":{"start":1741682374038,"stop":1741682374038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n      Feature: processor\n      Description: Identify and Subscribe user where the user doesnot exists[mock] (without suppression status code feature from server)\n      Success Criteria: Response should containt two payloads one for profile updation and other for subscription, response status code should be 200\n      Scenario: Business + Framework\n      Test ID: klaviyo-identify-test-1\n      API Version: v0\n    ","status":"passed","steps":[{"name":"Test Setup","time":{"start":1741682374045,"stop":1741682374046,"duration":1},"status":"passed","steps":[{"name":"Test Verification","time":{"start":1741682374045,"stop":1741682374046,"duration":1},"status":"passed","steps":[{"name":"Request","time":{"start":1741682374045,"stop":1741682374045,"duration":0},"status":"unknown","steps":[],"attachments":[{"uid":"9c7d18d602b57a76","name":"Request","source":"9c7d18d602b57a76.json","type":"application/json","size":1955}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true},{"name":"Actual Response","time":{"start":1741682374046,"stop":1741682374046,"duration":0},"status":"unknown","steps":[],"attachments":[{"uid":"d62986b6eb140ec5","name":"Actual Response","source":"d62986b6eb140ec5.json","type":"application/json","size":3216}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"afterAll","time":{"start":1741682390479,"stop":1741682390480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"jest"},{"name":"package","value":"test.integrations.component.test.ts"},{"name":"host","value":"fv-az1758-29"},{"name":"thread","value":"1"},{"name":"parentSuite","value":"/home/runner/work/rudder-transformer/rudder-transformer/test/integrations/destinations/klaviyo/processor/data.ts Tests"},{"name":"suite","value":"klaviyo destination"},{"name":"epic","value":"klaviyo"},{"name":"feature","value":"destination"},{"name":"story","value":"processor"},{"name":"tag","value":"Business + Framework"},{"name":"ALLURE_ID","value":"klaviyo-identify-test-1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["Business + Framework"]},"source":"c251de12d311394d.json","parameterValues":[]}